# -*- coding: utf-8 -*-
"""Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D8zNLL7BYXSCIKl7LWaczG0PEtIfJi3H
"""

import numpy as np
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

death = pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv')
confirmed = pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv')
recovered = pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv')
country = pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv')

# data cleaning

country.columns = map(str.lower, country.columns)
confirmed.columns = map(str.lower, confirmed.columns)
death.columns = map(str.lower, death.columns)
recovered.columns = map(str.lower, recovered.columns)

confirmed = confirmed.rename(columns={'province/state': 'state', 'country/region': 'country'})
recovered= confirmed.rename(columns={'province/state': 'state', 'country/region': 'country'})
death = death.rename(columns={'province/state': 'state', 'country/region': 'country'})
country = country.rename(columns={'country_region': 'country'})

sorted_country_df = country.sort_values('confirmed', ascending= False)

px.bar(
    sorted_country_df.head(10),
    x = "country",
    y = "confirmed",
    title= "Top 10 worst affected countries",
    color_discrete_sequence=["pink"], 
    height=500,
    width=800)

px.bar(
    sorted_country_df.head(10),
    x = "country",
    y = "deaths",
    title= "Top 10 worst affected countries",
    color_discrete_sequence=["pink"], 
    height=500,
    width=700)

px.bar(
    sorted_country_df.head(10),
    x = "country",
    y = "recovered",
    title= "Top 10 worst affected countries",
    color_discrete_sequence=["pink"], 
    height=500,
    width=800)

total_list = confirmed.groupby('country')['12/11/20'].sum().tolist() // change date according to your need

country_list = confirmed["country"].tolist()
country_set = set(country_list)
country_list = list(country_set)
country_list.sort()

new_df = pd.DataFrame(list(zip(country_list, total_list)), 
               columns =['Country', 'Total_Cases'])

colors = ["#F9F9F5", "#FAFAE6", "#FCFCCB", "#FCFCAE",  "#FCF1AE", "#FCEA7D", "#FCD97D",
          "#FCCE7D", "#FCC07D", "#FEB562", "#F9A648",  "#F98E48", "#FD8739", "#FE7519",
          "#FE5E19", "#FA520A", "#FA2B0A", "#9B1803",  "#861604", "#651104", "#570303",]


fig = go.Figure(data=go.Choropleth(
    locationmode = "country names",
    locations = new_df['Country'],
    z = new_df['Total_Cases'],
    colorscale = colors,
    autocolorscale=False,
    reversescale=False,
    colorbar_title = 'Reported Covid-19 Cases',
))


fig.update_layout(
    title_text='Reported Covid-19 Cases',
    geo=dict(
        showcoastlines=True,
    ),
)

fig.write_html('first_figure.html', auto_open=True)
fig.show()
